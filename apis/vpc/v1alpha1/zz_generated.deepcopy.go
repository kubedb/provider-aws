//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressRule) DeepCopyInto(out *SecurityGroupEgressRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressRule.
func (in *SecurityGroupEgressRule) DeepCopy() *SecurityGroupEgressRule {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroupEgressRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressRuleInitParameters) DeepCopyInto(out *SecurityGroupEgressRuleInitParameters) {
	*out = *in
	if in.CidrIPv4 != nil {
		in, out := &in.CidrIPv4, &out.CidrIPv4
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv6 != nil {
		in, out := &in.CidrIPv6, &out.CidrIPv6
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.ReferencedSecurityGroupID != nil {
		in, out := &in.ReferencedSecurityGroupID, &out.ReferencedSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressRuleInitParameters.
func (in *SecurityGroupEgressRuleInitParameters) DeepCopy() *SecurityGroupEgressRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressRuleList) DeepCopyInto(out *SecurityGroupEgressRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityGroupEgressRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressRuleList.
func (in *SecurityGroupEgressRuleList) DeepCopy() *SecurityGroupEgressRuleList {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroupEgressRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressRuleObservation) DeepCopyInto(out *SecurityGroupEgressRuleObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv4 != nil {
		in, out := &in.CidrIPv4, &out.CidrIPv4
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv6 != nil {
		in, out := &in.CidrIPv6, &out.CidrIPv6
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.ReferencedSecurityGroupID != nil {
		in, out := &in.ReferencedSecurityGroupID, &out.ReferencedSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupRuleID != nil {
		in, out := &in.SecurityGroupRuleID, &out.SecurityGroupRuleID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressRuleObservation.
func (in *SecurityGroupEgressRuleObservation) DeepCopy() *SecurityGroupEgressRuleObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressRuleParameters) DeepCopyInto(out *SecurityGroupEgressRuleParameters) {
	*out = *in
	if in.CidrIPv4 != nil {
		in, out := &in.CidrIPv4, &out.CidrIPv4
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv6 != nil {
		in, out := &in.CidrIPv6, &out.CidrIPv6
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.ReferencedSecurityGroupID != nil {
		in, out := &in.ReferencedSecurityGroupID, &out.ReferencedSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressRuleParameters.
func (in *SecurityGroupEgressRuleParameters) DeepCopy() *SecurityGroupEgressRuleParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressRuleSpec) DeepCopyInto(out *SecurityGroupEgressRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressRuleSpec.
func (in *SecurityGroupEgressRuleSpec) DeepCopy() *SecurityGroupEgressRuleSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressRuleStatus) DeepCopyInto(out *SecurityGroupEgressRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressRuleStatus.
func (in *SecurityGroupEgressRuleStatus) DeepCopy() *SecurityGroupEgressRuleStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressRule) DeepCopyInto(out *SecurityGroupIngressRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressRule.
func (in *SecurityGroupIngressRule) DeepCopy() *SecurityGroupIngressRule {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroupIngressRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressRuleInitParameters) DeepCopyInto(out *SecurityGroupIngressRuleInitParameters) {
	*out = *in
	if in.CidrIPv4 != nil {
		in, out := &in.CidrIPv4, &out.CidrIPv4
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv6 != nil {
		in, out := &in.CidrIPv6, &out.CidrIPv6
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.ReferencedSecurityGroupID != nil {
		in, out := &in.ReferencedSecurityGroupID, &out.ReferencedSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressRuleInitParameters.
func (in *SecurityGroupIngressRuleInitParameters) DeepCopy() *SecurityGroupIngressRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressRuleList) DeepCopyInto(out *SecurityGroupIngressRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityGroupIngressRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressRuleList.
func (in *SecurityGroupIngressRuleList) DeepCopy() *SecurityGroupIngressRuleList {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroupIngressRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressRuleObservation) DeepCopyInto(out *SecurityGroupIngressRuleObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv4 != nil {
		in, out := &in.CidrIPv4, &out.CidrIPv4
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv6 != nil {
		in, out := &in.CidrIPv6, &out.CidrIPv6
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.ReferencedSecurityGroupID != nil {
		in, out := &in.ReferencedSecurityGroupID, &out.ReferencedSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupRuleID != nil {
		in, out := &in.SecurityGroupRuleID, &out.SecurityGroupRuleID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressRuleObservation.
func (in *SecurityGroupIngressRuleObservation) DeepCopy() *SecurityGroupIngressRuleObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressRuleParameters) DeepCopyInto(out *SecurityGroupIngressRuleParameters) {
	*out = *in
	if in.CidrIPv4 != nil {
		in, out := &in.CidrIPv4, &out.CidrIPv4
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv6 != nil {
		in, out := &in.CidrIPv6, &out.CidrIPv6
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.ReferencedSecurityGroupID != nil {
		in, out := &in.ReferencedSecurityGroupID, &out.ReferencedSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressRuleParameters.
func (in *SecurityGroupIngressRuleParameters) DeepCopy() *SecurityGroupIngressRuleParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressRuleSpec) DeepCopyInto(out *SecurityGroupIngressRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressRuleSpec.
func (in *SecurityGroupIngressRuleSpec) DeepCopy() *SecurityGroupIngressRuleSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressRuleStatus) DeepCopyInto(out *SecurityGroupIngressRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressRuleStatus.
func (in *SecurityGroupIngressRuleStatus) DeepCopy() *SecurityGroupIngressRuleStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressRuleStatus)
	in.DeepCopyInto(out)
	return out
}
