apiVersion: kafka.aws.kubedb.com/v1alpha1
kind: Cluster
metadata:
  annotations:
    meta.upbound.io/example-id: kafka/v1alpha1/cluster
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    brokerNodeGroupInfo:
    - clientSubnetsRefs:
      - name: subnet_az1
      - name: subnet_az2
      - name: subnet_az3
      instanceType: kafka.m5.large
      securityGroupsRefs:
      - name: sg
      storageInfo:
      - ebsStorageInfo:
        - volumeSize: 1000
    clusterName: example
    encryptionInfo:
    - encryptionAtRestKmsKeyArnSelector:
        matchLabels:
          testing.upbound.io/example-name: kms
    kafkaVersion: 3.2.0
    loggingInfo:
    - brokerLogs:
      - cloudwatchLogs:
        - enabled: true
          logGroup: ${aws_cloudwatch_log_group.test.name}
        firehose:
        - deliveryStream: ${aws_kinesis_firehose_delivery_stream.test_stream.name}
          enabled: true
        s3:
        - bucket: ${aws_s3_bucket.bucket.id}
          enabled: true
          prefix: logs/msk-
    numberOfBrokerNodes: 3
    openMonitoring:
    - prometheus:
      - jmxExporter:
        - enabledInBroker: true
        nodeExporter:
        - enabledInBroker: true
    region: us-west-1
    tags:
      foo: bar

---

apiVersion: kms.aws.kubedb.com/v1alpha1
kind: Key
metadata:
  annotations:
    meta.upbound.io/example-id: kafka/v1alpha1/cluster
  labels:
    testing.upbound.io/example-name: kms
  name: kms
spec:
  forProvider:
    description: example
    region: us-west-1

---

apiVersion: ec2.aws.kubedb.com/v1alpha1
kind: SecurityGroup
metadata:
  annotations:
    meta.upbound.io/example-id: kafka/v1alpha1/cluster
  labels:
    testing.upbound.io/example-name: sg
  name: sg
spec:
  forProvider:
    region: us-west-1
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: vpc

---

apiVersion: ec2.aws.kubedb.com/v1alpha1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: kafka/v1alpha1/cluster
  labels:
    testing.upbound.io/example-name: subnet_az1
  name: subnet-az1
spec:
  forProvider:
    availabilityZone: ${data.aws_availability_zones.azs.names[0]}
    cidrBlock: 192.168.0.0/24
    region: us-west-1
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: vpc

---

apiVersion: ec2.aws.kubedb.com/v1alpha1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: kafka/v1alpha1/cluster
  labels:
    testing.upbound.io/example-name: subnet_az2
  name: subnet-az2
spec:
  forProvider:
    availabilityZone: ${data.aws_availability_zones.azs.names[1]}
    cidrBlock: 192.168.1.0/24
    region: us-west-1
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: vpc

---

apiVersion: ec2.aws.kubedb.com/v1alpha1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: kafka/v1alpha1/cluster
  labels:
    testing.upbound.io/example-name: subnet_az3
  name: subnet-az3
spec:
  forProvider:
    availabilityZone: ${data.aws_availability_zones.azs.names[2]}
    cidrBlock: 192.168.2.0/24
    region: us-west-1
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: vpc

---

apiVersion: ec2.aws.kubedb.com/v1alpha1
kind: VPC
metadata:
  annotations:
    meta.upbound.io/example-id: kafka/v1alpha1/cluster
  labels:
    testing.upbound.io/example-name: vpc
  name: vpc
spec:
  forProvider:
    cidrBlock: 192.168.0.0/22
    region: us-west-1
